<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--id    对象的id
        class 类的全路径名
        name 和id类似,一般不用
        scope 控制对象单例多例和使用范围
            singleton作用域(scope 默认值), Spring IOC容器中只会存在一个共享的bean实例
            prototype作用域部署的bean，每一次获取都会产生一个新的bean实例，相当与一个new的操作
            request表示该针对每一次HTTP请求都会产生一个新的bean，同时该bean仅在当前HTTP request内有效
            session作用域表示该针对每一次HTTP请求都会产生一个新的bean，同时该bean仅在当前HTTP session内有效
            global session作用域类似于标准的HTTP Session作用域，不过它仅仅在基于portlet的web应用中才有意义
        lazy-init 懒加载 调用getBean的时候再去实例化对象-->
    <bean id="user" class="top.cliffside.pojo.User" name="user1" scope="prototype"
    lazy-init="true">
        <property name="userid" value="1"></property>
        <property name="username" value="法外狂徒"></property>
        <property name="password" value="张三"></property>
    </bean>

    <!--DI给对象属性赋值
    1 通过set方法给对象属性赋值
    2 通过有参构造给对象属性赋值
    -->
    <bean id="user2" class="top.cliffside.pojo.User">
        <constructor-arg name="userid" value="2"></constructor-arg>
        <constructor-arg name="username" value="小明"></constructor-arg>
        <constructor-arg name="password" value="123456789"></constructor-arg>
    </bean>
    <bean id="user3" class="top.cliffside.pojo.User">
        <constructor-arg index="0"  value="3"></constructor-arg>
        <constructor-arg index="1"  value="小黑"></constructor-arg>
        <constructor-arg index="2"  value="987654321"></constructor-arg>
    </bean>


    <bean id="user4" class="top.cliffside.pojo.User">
        <!--null值-->
        <property name="userid">
            <null></null>
        </property>
        <!--特殊符号 转译字符 < &lt;  >&gt;  & &amp;     -->
        <property name="username" value="&amp;xiaoming&lt;&gt;"></property>
        <!-- 特殊符号  <![CDATA[内容]]>  -->
        <property name="password">
            <value><![CDATA[&<123456>]]></value>
        </property>
    </bean>
</beans>